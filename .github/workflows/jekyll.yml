name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Generate plots
        run: |
          python src/plot_qldpc_codes.py
          mkdir -p assets/images
          cp out/png/qldpc_codes_plot.png assets/images/

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install dependencies
        run: bundle install

      - name: Build site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: Deploy to GitHub Pages
        run: |
          # Configure git
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Save the current commit SHA and _site directory
          CURRENT_COMMIT=$(git rev-parse HEAD)
          TEMP_DIR=$(mktemp -d)
          cp -r _site/* "$TEMP_DIR/"
          
          # Stash any changes including untracked files
          git add -A
          git stash push -u
          
          # Clean untracked files and directories
          git clean -fdx
          
          # Checkout gh-pages branch, creating it if it doesn't exist
          if git show-ref --verify --quiet refs/remotes/origin/gh-pages; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
          fi
          
          # Remove everything but .git directory
          git rm -rf .
          
          # Copy the built site from temp directory
          cp -r "$TEMP_DIR"/* .
          rm -rf "$TEMP_DIR"
          
          # Add .nojekyll file
          touch .nojekyll
          
          # Stage and commit
          git add -A
          git commit -m "Deploy site from commit ${CURRENT_COMMIT}"
          
          # Push to gh-pages
          git push -f origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 